<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Simons Game-Enter the Arena</title>
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&display=swap");

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        /* font-family: "Orbitron", monospace; */
        /* font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
          "Helvetica Neue", Arial, sans-serif; */
        font-family: "Michroma", sans-serif;

        background: linear-gradient(
          135deg,
          #0a0a0a 0%,
          #1a1a2e 50%,
          #16213e 100%
        );
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        position: relative;
      }

      /* Animated background particles */
      .particles {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
      }

      .particle {
        position: absolute;
        width: 2px;
        height: 2px;
        background: #00ffff;
        border-radius: 50%;
        animation: float 6s infinite linear;
        opacity: 0.7;
      }

      @keyframes float {
        0% {
          transform: translateY(100vh) translateX(0px);
          opacity: 0;
        }
        10% {
          opacity: 0.7;
        }
        90% {
          opacity: 0.7;
        }
        100% {
          transform: translateY(-10px) translateX(100px);
          opacity: 0;
        }
      }

      /* Main container */
      .game-container {
        background: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(20px);
        border: 2px solid #00ffff;
        border-radius: 20px;
        padding: 40px;
        text-align: center;
        position: relative;
        z-index: 10;
        box-shadow: 0 0 50px rgba(0, 255, 255, 0.3),
          inset 0 0 50px rgba(0, 255, 255, 0.1);
        animation: pulse-border 3s ease-in-out infinite;
        max-width: 500px;
        width: 90%;
      }

      @keyframes pulse-border {
        0%,
        100% {
          box-shadow: 0 0 50px rgba(0, 255, 255, 0.3),
            inset 0 0 50px rgba(0, 255, 255, 0.1);
        }
        50% {
          box-shadow: 0 0 80px rgba(0, 255, 255, 0.5),
            inset 0 0 80px rgba(0, 255, 255, 0.2);
        }
      }

      /* Game title */
      .game-title {
        font-size: 2.5rem;
        font-weight: 900;
        color: #00ffff;
        text-shadow: 0 0 20px #515d5d;
        margin-bottom: 10px;
      }

      @keyframes glow-text {
        from {
          text-shadow: 0 0 20px #00ffff, 0 0 30px #00ffff;
        }
        to {
          text-shadow: 0 0 30px #00ffff, 0 0 40px #00ffff, 0 0 50px #00ffff;
        }
      }

      .subtitle {
        color: #888;
        font-size: 0.9rem;
        margin-bottom: 40px;
        letter-spacing: 2px;
      }

      /* Form styling */
      .auth-form {
        margin-bottom: 30px;
        position: relative;
      }

      .form-header {
        color: #ffffff;
        font-size: 1.2rem;
        margin-bottom: 20px;
        font-weight: 400;
        opacity: 0.9;
      }

      /* Button styling */
      .game-button {
        background: linear-gradient(45deg, #1a1a2e, #16213e);
        border: 2px solid #00ffff;
        color: #00ffff;
        padding: 15px 40px;
        font-size: 1.1rem;
        font-family: "Orbitron", monospace;
        font-weight: 700;
        cursor: pointer;
        border-radius: 10px;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        text-transform: uppercase;
        letter-spacing: 1px;
        min-width: 200px;
      }

      .game-button::before {
        content: "";
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
          90deg,
          transparent,
          rgba(0, 255, 255, 0.3),
          transparent
        );
        transition: left 0.5s;
      }

      .game-button:hover::before {
        left: 100%;
      }

      .game-button:hover {
        background: linear-gradient(45deg, #16213e, #1a1a2e);
        box-shadow: 0 0 30px rgba(0, 255, 255, 0.5),
          inset 0 0 30px rgba(0, 255, 255, 0.1);
        transform: translateY(-2px);
      }

      .game-button:active {
        transform: translateY(0);
        box-shadow: 0 0 20px rgba(0, 255, 255, 0.3),
          inset 0 0 20px rgba(0, 255, 255, 0.1);
      }

      /* Login button specific styling */
      .login-btn {
        background: linear-gradient(45deg, #0a4d4d, #0d5f5f);
      }

      .login-btn:hover {
        background: linear-gradient(45deg, #0d5f5f, #0a4d4d);
      }

      /* Register button specific styling */
      .register-btn {
        background: linear-gradient(45deg, #4d0a4d, #5f0d5f);
        border-color: #ff00ff;
        color: #ff00ff;
      }

      .register-btn:hover {
        background: linear-gradient(45deg, #5f0d5f, #4d0a4d);
        box-shadow: 0 0 30px rgba(255, 0, 255, 0.5),
          inset 0 0 30px rgba(255, 0, 255, 0.1);
      }

      .register-btn::before {
        background: linear-gradient(
          90deg,
          transparent,
          rgba(255, 0, 255, 0.3),
          transparent
        );
      }

      /* Responsive design */
      @media (max-width: 600px) {
        .game-container {
          padding: 30px 20px;
        }

        .game-title {
          font-size: 2rem;
        }

        .game-button {
          padding: 12px 30px;
          font-size: 1rem;
          min-width: 180px;
        }
      }

      /* Decorative elements */
      .corner-decoration {
        position: absolute;
        width: 30px;
        height: 30px;
        border: 2px solid #00ffff;
      }

      .corner-decoration.top-left {
        top: 15px;
        left: 15px;
        border-right: none;
        border-bottom: none;
      }

      .corner-decoration.top-right {
        top: 15px;
        right: 15px;
        border-left: none;
        border-bottom: none;
      }

      .corner-decoration.bottom-left {
        bottom: 15px;
        left: 15px;
        border-right: none;
        border-top: none;
      }

      .corner-decoration.bottom-right {
        bottom: 15px;
        right: 15px;
        border-left: none;
        border-top: none;
      }
    </style>
  </head>
  <body>
    <div class="particles" id="particles"></div>

    <div class="game-container">
      <div class="corner-decoration top-left"></div>
      <div class="corner-decoration top-right"></div>
      <div class="corner-decoration bottom-left"></div>
      <div class="corner-decoration bottom-right"></div>

      <h1 class="game-title">SIMONS GAME</h1>
      <p class="subtitle">ENTER THE DIGITAL ARENA</p>

      <form method="get" action="/user/login" class="auth-form">
        <h2 class="form-header">Ready to Test Your Memory?</h2>
        <button type="submit" class="game-button login-btn">
          <span>LOGIN</span>
        </button>
      </form>

      <form method="get" action="/user/register" class="auth-form">
        <h2 class="form-header">New Player? Join the Challenge</h2>
        <button type="submit" class="game-button register-btn">
          <span>REGISTER</span>
        </button>
      </form>
    </div>

    <script>
      // Create floating particles
      function createParticles() {
        const particlesContainer = document.getElementById("particles");
        const colors = ["#00ffff", "#ff00ff", "#00ff00", "#ffff00"];

        for (let i = 0; i < 50; i++) {
          const particle = document.createElement("div");
          particle.className = "particle";
          particle.style.left = Math.random() * 100 + "%";
          particle.style.background =
            colors[Math.floor(Math.random() * colors.length)];
          particle.style.animationDelay = Math.random() * 6 + "s";
          particle.style.animationDuration = Math.random() * 3 + 4 + "s";
          particlesContainer.appendChild(particle);
        }
      }

      // Add button click effects
      document.querySelectorAll(".game-button").forEach((button) => {
        button.addEventListener("click", function (e) {
          // Create ripple effect
          const ripple = document.createElement("span");
          const rect = this.getBoundingClientRect();
          const size = Math.max(rect.width, rect.height);
          const x = e.clientX - rect.left - size / 2;
          const y = e.clientY - rect.top - size / 2;

          ripple.style.cssText = `
                    position: absolute;
                    width: ${size}px;
                    height: ${size}px;
                    left: ${x}px;
                    top: ${y}px;
                    background: radial-gradient(circle, rgba(255,255,255,0.3) 0%, transparent 70%);
                    border-radius: 50%;
                    transform: scale(0);
                    animation: ripple 0.6s ease-out;
                    pointer-events: none;
                `;

          this.appendChild(ripple);

          setTimeout(() => {
            ripple.remove();
          }, 600);
        });
      });

      // Add CSS for ripple animation
      const style = document.createElement("style");
      style.textContent = `
            @keyframes ripple {
                to {
                    transform: scale(2);
                    opacity: 0;
                }
            }
        `;
      document.head.appendChild(style);

      // Initialize particles when page loads
      window.addEventListener("load", createParticles);

      // Add mouse movement effect to container
      document.addEventListener("mousemove", function (e) {
        const container = document.querySelector(".game-container");
        const rect = container.getBoundingClientRect();
        const x = e.clientX - rect.left - rect.width / 2;
        const y = e.clientY - rect.top - rect.height / 2;

        const rotateX = (y / rect.height) * 10;
        const rotateY = (x / rect.width) * -10;

        container.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
      });

      // Reset transform when mouse leaves
      document.addEventListener("mouseleave", function () {
        const container = document.querySelector(".game-container");
        container.style.transform =
          "perspective(1000px) rotateX(0deg) rotateY(0deg)";
      });
    </script>
  </body>
</html>
